name: Tests

on:
  pull_request:
    branches: [main, develop]    # PRでのテスト実行のみ（デプロイは別）

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev --group test

    - name: Set environment variables for testing
      run: |
        echo "USE_LANGGRAPH=true" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

    - name: Run pre-commit (diff only)
      run: |
        set -eux
        BASE_REF="${{ github.base_ref || 'main' }}"
        git fetch --no-tags --prune --depth=1 origin "+refs/heads/${BASE_REF}:refs/remotes/origin/${BASE_REF}"
        uvx pre-commit run --from-ref "origin/${BASE_REF}" --to-ref HEAD

    - name: Build caches (precomputed data)
      run: |
        export PYTHONPATH=$(pwd)
        uv run python scripts/build_cache.py

    - name: Run tests
      run: |
        uv run pytest tests/ -v --tb=short

    - name: Run integration tests
      run: |
        uv run pytest tests/ -m integration -v --tb=short
      continue-on-error: true  # 統合テストはAPIに依存するため失敗を許可

  test-coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python 3.13
      run: uv python install 3.13

    - name: Install dependencies
      run: |
        uv sync --dev --group test

    - name: Set environment variables for testing
      run: |
        echo "USE_LANGGRAPH=true" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

    - name: Build caches (precomputed data)
      run: |
        export PYTHONPATH=$(pwd)
        uv run python scripts/build_cache.py

    - name: Run tests with coverage
      run: |
        uv run pytest tests/ --cov=src --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
