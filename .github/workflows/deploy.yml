name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]  # main„Éñ„É©„É≥„ÉÅ„Å∏„ÅÆ„Éó„ÉÉ„Ç∑„É•ÊôÇ„ÅÆ„Åø„Éá„Éó„É≠„Ç§

env:
  PROJECT_ID: papers-rag-agent
  GAR_LOCATION: asia-northeast1
  SERVICE: papers-rag-agent
  REGION: asia-northeast1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python 3.13
      run: uv python install 3.13

    - name: Install dependencies
      run: |
        uv sync --group test

    - name: Set environment variables for testing
      run: |
        echo "USE_LANGGRAPH=true" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=test_key" >> $GITHUB_ENV
    
    - name: Run core tests (excluding UI tests)
      run: |
        uv run pytest tests/test_graphs/ tests/test_retrieval/ tests/test_data_cache_diagnostics.py -v --tb=short

  deploy:
    needs: test  # „ÉÜ„Çπ„Éà„ÅåÊàêÂäü„Åó„ÅüÂ†¥Âêà„ÅÆ„Åø„Éá„Éó„É≠„Ç§ÂÆüË°å
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Install uv for build
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python 3.13 for build
        run: uv python install 3.13

      - name: Install dependencies for build
        run: |
          uv sync
          # Skip cache building as precomputed cache is now included in Git
          # uv run python scripts/build_cache.py

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: '--allow-unauthenticated --port=8000 --min-instances=1 --cpu=1 --memory=2Gi --timeout=300 --set-env-vars=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},LLM_PROVIDER=openai,TOP_K=5,SUPPORT_THRESHOLD=0.35,MAX_OUTPUT_CHARS=1400'

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      - name: Update README with Cloud Run URL
        run: |
          CLOUDRUN_URL="${{ steps.deploy.outputs.url }}"
          
          # README„ÅÆCloud Run URL„Çª„ÇØ„Ç∑„Éß„É≥„ÇíÊõ¥Êñ∞
          sed -i.bak '/<!-- CLOUDRUN_URL_START -->/,/<!-- CLOUDRUN_URL_END -->/c\
          <!-- CLOUDRUN_URL_START -->\
          üöÄ **Live Demo**: ['$CLOUDRUN_URL']('$CLOUDRUN_URL')\
          <!-- CLOUDRUN_URL_END -->' README.md
          
          # „Éê„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó„Éï„Ç°„Ç§„É´„ÇíÂâäÈô§
          rm README.md.bak
          
          echo "‚úÖ README updated with Cloud Run URL: $CLOUDRUN_URL"

      - name: Commit and push README changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Only check for README changes, ignore cache files
          if [[ -n $(git diff --name-only | grep -v precomputed) ]]; then
            git add README.md
            git commit -m "chore: update Cloud Run URL in README"
            git push
            echo "üìù README updated and changes pushed"
          else
            echo "‚ÑπÔ∏è No README changes to commit"
          fi
